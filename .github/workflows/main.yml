name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build --load -t cloudapp:latest .
          docker tag cloudapp:latest ${{ secrets.DOCKERHUB_USERNAME }}/cloudapp:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/cloudapp:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            existing_container=$(docker ps -q -f name=cloudapp)
            if [ ! -z "$existing_container" ]; then
                docker stop $existing_container
                docker rm $existing_container
            fi
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cloudapp:latest
            docker run -d -p 80:80 --name cloudapp ${{ secrets.DOCKERHUB_USERNAME }}/cloudapp:latest
            docker image prune -f
